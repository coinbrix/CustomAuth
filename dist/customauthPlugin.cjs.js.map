{"version":3,"file":"customauthPlugin.cjs.js","mappings":"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","sources":["webpack://@Singularity/Customauth-plugin/external commonjs2 \"@toruslabs/broadcast-channel\"","webpack://@Singularity/Customauth-plugin/webpack/bootstrap","webpack://@Singularity/Customauth-plugin/webpack/runtime/compat get default export","webpack://@Singularity/Customauth-plugin/webpack/runtime/create fake namespace object","webpack://@Singularity/Customauth-plugin/webpack/runtime/define property getters","webpack://@Singularity/Customauth-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://@Singularity/Customauth-plugin/webpack/runtime/make namespace object","webpack://@Singularity/Customauth-plugin/./src/utils/enums.ts","webpack://@Singularity/Customauth-plugin/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@Singularity/Customauth-plugin/external commonjs2 \"@toruslabs/http-helpers\"","webpack://@Singularity/Customauth-plugin/external commonjs2 \"lodash.merge\"","webpack://@Singularity/Customauth-plugin/external commonjs2 \"@babel/runtime/helpers/objectWithoutProperties\"","webpack://@Singularity/Customauth-plugin/external commonjs2 \"@babel/runtime/helpers/objectSpread2\"","webpack://@Singularity/Customauth-plugin/external commonjs2 \"base64url\"","webpack://@Singularity/Customauth-plugin/external commonjs2 \"bowser\"","webpack://@Singularity/Customauth-plugin/external commonjs2 \"loglevel\"","webpack://@Singularity/Customauth-plugin/./src/utils/loglevel.ts","webpack://@Singularity/Customauth-plugin/./src/utils/helpers.ts","webpack://@Singularity/Customauth-plugin/external commonjs2 \"events\"","webpack://@Singularity/Customauth-plugin/./src/utils/PopupHandler.ts","webpack://@Singularity/Customauth-plugin/./src/handlers/AbstractLoginHandler.ts","webpack://@Singularity/Customauth-plugin/./src/handlers/DiscordHandler.ts","webpack://@Singularity/Customauth-plugin/./src/handlers/FacebookHandler.ts","webpack://@Singularity/Customauth-plugin/./src/handlers/GoogleHandler.ts","webpack://@Singularity/Customauth-plugin/external commonjs2 \"jwt-decode\"","webpack://@Singularity/Customauth-plugin/./src/handlers/JwtHandler.ts","webpack://@Singularity/Customauth-plugin/./src/handlers/MockLoginHandler.ts","webpack://@Singularity/Customauth-plugin/./src/handlers/PasswordlessHandler.ts","webpack://@Singularity/Customauth-plugin/./src/handlers/RedditHandler.ts","webpack://@Singularity/Customauth-plugin/./src/handlers/TwitchHandler.ts","webpack://@Singularity/Customauth-plugin/./src/handlers/WebAuthnHandler.ts","webpack://@Singularity/Customauth-plugin/./src/handlers/HandlerFactory.ts","webpack://@Singularity/Customauth-plugin/external commonjs2 \"@toruslabs/fetch-node-details\"","webpack://@Singularity/Customauth-plugin/external commonjs2 \"@toruslabs/torus.js\"","webpack://@Singularity/Customauth-plugin/external commonjs2 \"@chaitanyapotti/register-service-worker\"","webpack://@Singularity/Customauth-plugin/./src/registerServiceWorker.ts","webpack://@Singularity/Customauth-plugin/./src/sentry.ts","webpack://@Singularity/Customauth-plugin/external commonjs2 \"@toruslabs/eccrypto\"","webpack://@Singularity/Customauth-plugin/external commonjs2 \"@toruslabs/metadata-helpers\"","webpack://@Singularity/Customauth-plugin/./src/utils/StorageHelper.ts","webpack://@Singularity/Customauth-plugin/./src/login.ts","webpack://@Singularity/Customauth-plugin/./src/index.ts"],"sourcesContent":["module.exports = require(\"@toruslabs/broadcast-channel\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const LOGIN = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  GITHUB: \"github\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  LINE: \"line\",\n  EMAIL_PASSWORD: \"email_password\",\n  PASSWORDLESS: \"passwordless\",\n  JWT: \"jwt\",\n  WEBAUTHN: \"webauthn\",\n} as const;\n\nexport const AGGREGATE_VERIFIER = {\n  SINGLE_VERIFIER_ID: \"single_id_verifier\",\n  // AND_AGGREGATE_VERIFIER : \"and_aggregate_verifier\",\n  // OR_AGGREGATE_VERIFIER : \"or_aggregate_verifier\",\n} as const;\n\nexport const UX_MODE = {\n  POPUP: \"popup\",\n  REDIRECT: \"redirect\",\n} as const;\n\nexport const REDIRECT_PARAMS_STORAGE_METHOD = {\n  LOCAL_STORAGE: \"localStorage\",\n  SESSION_STORAGE: \"sessionStorage\",\n  SERVER: \"server\",\n};\n\nexport const TORUS_METHOD = {\n  TRIGGER_LOGIN: \"triggerLogin\",\n  TRIGGER_AGGREGATE_LOGIN: \"triggerAggregateLogin\",\n  TRIGGER_AGGREGATE_HYBRID_LOGIN: \"triggerHybridAggregateLogin\",\n} as const;\n\nexport type LOGIN_TYPE = (typeof LOGIN)[keyof typeof LOGIN];\nexport type AGGREGATE_VERIFIER_TYPE = (typeof AGGREGATE_VERIFIER)[keyof typeof AGGREGATE_VERIFIER];\nexport type UX_MODE_TYPE = (typeof UX_MODE)[keyof typeof UX_MODE];\nexport type TORUS_METHOD_TYPE = (typeof TORUS_METHOD)[keyof typeof TORUS_METHOD];\nexport type REDIRECT_PARAMS_STORAGE_METHOD_TYPE = (typeof REDIRECT_PARAMS_STORAGE_METHOD)[keyof typeof REDIRECT_PARAMS_STORAGE_METHOD];\n\nexport const SENTRY_TXNS = {\n  FETCH_NODE_DETAILS: \"fetchNodeDetails\",\n  PUB_ADDRESS_LOOKUP: \"pubAddressLookup\",\n  FETCH_SHARES: \"fetchShares\",\n} as const;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/http-helpers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash.merge\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectWithoutProperties\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/objectSpread2\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"base64url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"bowser\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"loglevel\");","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"customauth\");\n","import base64url from \"base64url\";\nimport Bowser from \"bowser\";\n\nimport { Auth0UserInfo, TorusGenericObject } from \"../handlers/interfaces\";\nimport { LOGIN, LOGIN_TYPE, REDIRECT_PARAMS_STORAGE_METHOD_TYPE } from \"./enums\";\nimport log from \"./loglevel\";\ninterface CustomMessageEvent extends MessageEvent {\n  error: string;\n}\n\ninterface EventListener {\n  (evt: CustomMessageEvent): void;\n}\n\ntype EmitterType = { addEventListener(type: string, handler: EventListener): void; removeEventListener(type: string, handler: EventListener): void };\n\nexport function eventToPromise<T>(emitter: EmitterType): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    const handler = (ev: CustomMessageEvent) => {\n      const { error = \"\", data } = ev;\n      emitter.removeEventListener(\"message\", handler);\n      if (error) return reject(new Error(error));\n      return resolve(data as T);\n    };\n    emitter.addEventListener(\"message\", handler);\n  });\n}\n\n// These are the default connection names used by auth0\nexport const loginToConnectionMap = {\n  [LOGIN.APPLE]: \"apple\",\n  [LOGIN.GITHUB]: \"github\",\n  [LOGIN.LINKEDIN]: \"linkedin\",\n  [LOGIN.TWITTER]: \"twitter\",\n  [LOGIN.WEIBO]: \"weibo\",\n  [LOGIN.LINE]: \"line\",\n  [LOGIN.EMAIL_PASSWORD]: \"Username-Password-Authentication\",\n  [LOGIN.PASSWORDLESS]: \"email\",\n};\n\nexport const padUrlString = (url: URL): string => (url.href.endsWith(\"/\") ? url.href : `${url.href}/`);\n\n/**\n * Returns a random number. Don't use for cryptographic purposes.\n * @returns a random number\n */\nexport const randomId = (): string => Math.random().toString(36).slice(2);\n\nexport const broadcastChannelOptions = {\n  // type: 'localstorage', // (optional) enforce a type, oneOf['native', 'idb', 'localstorage', 'node']\n  webWorkerSupport: false, // (optional) set this to false if you know that your channel will never be used in a WebWorker (increases performance)\n};\n\nfunction caseSensitiveField(field: string, isCaseSensitive?: boolean): string {\n  return isCaseSensitive ? field : field.toLowerCase();\n}\n\nexport const getVerifierId = (\n  userInfo: Auth0UserInfo,\n  typeOfLogin: LOGIN_TYPE,\n  verifierIdField?: keyof Auth0UserInfo,\n  isVerifierIdCaseSensitive = true\n): string => {\n  const { name, sub } = userInfo;\n  if (verifierIdField) return caseSensitiveField(userInfo[verifierIdField], isVerifierIdCaseSensitive);\n  switch (typeOfLogin) {\n    case LOGIN.PASSWORDLESS:\n    case LOGIN.EMAIL_PASSWORD:\n      return caseSensitiveField(name, isVerifierIdCaseSensitive);\n    case LOGIN.WEIBO:\n    case LOGIN.GITHUB:\n    case LOGIN.TWITTER:\n    case LOGIN.APPLE:\n    case LOGIN.LINKEDIN:\n    case LOGIN.LINE:\n    case LOGIN.JWT:\n      return caseSensitiveField(sub, isVerifierIdCaseSensitive);\n    default:\n      throw new Error(\"Invalid login type\");\n  }\n};\n\nexport const handleRedirectParameters = (\n  hash: string,\n  queryParameters: TorusGenericObject\n): { error: string; instanceParameters: TorusGenericObject; hashParameters: TorusGenericObject } => {\n  const hashParameters: TorusGenericObject = hash.split(\"&\").reduce((result: Record<string, string>, item) => {\n    const [part0, part1] = item.split(\"=\");\n    result[part0] = part1;\n    return result;\n  }, {});\n  log.info(hashParameters, queryParameters);\n  let instanceParameters: TorusGenericObject = {};\n  let error = \"\";\n  if (Object.keys(hashParameters).length > 0 && hashParameters.state) {\n    instanceParameters = JSON.parse(base64url.decode(decodeURIComponent(decodeURIComponent(hashParameters.state)))) || {};\n    error = hashParameters.error_description || hashParameters.error || error;\n  } else if (Object.keys(queryParameters).length > 0 && queryParameters.state) {\n    instanceParameters = JSON.parse(base64url.decode(decodeURIComponent(decodeURIComponent(queryParameters.state)))) || {};\n    if (queryParameters.error) error = queryParameters.error;\n  }\n  return { error, instanceParameters, hashParameters };\n};\n\nexport function storageAvailable(type: REDIRECT_PARAMS_STORAGE_METHOD_TYPE): boolean {\n  let storage: Storage;\n  try {\n    storage = window[type as \"sessionStorage\" | \"localStorage\"];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error: unknown) {\n    const e = error as { code?: number; name?: string };\n    return (\n      e &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === \"QuotaExceededError\" ||\n        // Firefox\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n\nexport function getPopupFeatures(): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport const isFirefox = (): boolean => window?.navigator?.userAgent.toLowerCase().indexOf(\"firefox\") > -1 || false;\n\nexport function constructURL(params: { baseURL: string; query?: Record<string, unknown>; hash?: Record<string, unknown> }): string {\n  const { baseURL, query, hash } = params;\n\n  const url = new URL(baseURL);\n  if (query) {\n    Object.keys(query).forEach((key) => {\n      url.searchParams.append(key, query[key] as string);\n    });\n  }\n  if (hash) {\n    const h = new URL(constructURL({ baseURL, query: hash })).searchParams.toString();\n    url.hash = h;\n  }\n  return url.toString();\n}\n\nexport function are3PCSupported(): boolean {\n  const browserInfo = Bowser.parse(navigator.userAgent);\n  log.info(JSON.stringify(browserInfo), \"current browser info\");\n\n  let thirdPartyCookieSupport = true;\n  // brave\n  if ((navigator as unknown as { brave: boolean })?.brave) {\n    thirdPartyCookieSupport = false;\n  }\n  // All webkit & gecko engine instances use itp (intelligent tracking prevention -\n  // https://webkit.org/tracking-prevention/#intelligent-tracking-prevention-itp)\n  if (browserInfo.engine.name === Bowser.ENGINE_MAP.WebKit || browserInfo.engine.name === Bowser.ENGINE_MAP.Gecko) {\n    thirdPartyCookieSupport = false;\n  }\n\n  return thirdPartyCookieSupport;\n}\n\nexport const validateAndConstructUrl = (domain: string): URL => {\n  try {\n    const url = new URL(decodeURIComponent(domain));\n    return url;\n  } catch (error: unknown) {\n    throw new Error(`${(error as Error)?.message || \"\"}, Note: Your jwt domain: (i.e ${domain}) must have http:// or https:// prefix`);\n  }\n};\n\nexport function isMobileOrTablet(): boolean {\n  const browser = Bowser.getParser(navigator.userAgent);\n  const platform = browser.getPlatform();\n  return platform.type === Bowser.PLATFORMS_MAP.tablet || platform.type === Bowser.PLATFORMS_MAP.mobile;\n}\n\nexport function getTimeout(typeOfLogin: LOGIN_TYPE) {\n  if ((typeOfLogin === LOGIN.FACEBOOK || typeOfLogin === LOGIN.LINE) && isMobileOrTablet()) {\n    return 1000 * 60; // 60 seconds to finish the login\n  }\n  return 1000 * 10; // 10 seconds\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"events\");","import { EventEmitter } from \"events\";\n\nimport { getPopupFeatures } from \"./helpers\";\n\nclass PopupHandler extends EventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  timeout: number;\n\n  constructor({ url, target, features, timeout = 30000 }: { url: URL; target?: string; features?: string; timeout?: number }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this.timeout = timeout;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          setTimeout(() => {\n            if (!this.iClosedWindow) {\n              this.emit(\"close\");\n            }\n            this.iClosedWindow = false;\n            this.window = undefined;\n          }, this.timeout);\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): Promise<void> {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (!this.window) throw new Error(\"popup window is blocked\");\n    if (this.window?.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import base64url from \"base64url\";\n\nimport { LOGIN_TYPE, UX_MODE, UX_MODE_TYPE } from \"../utils/enums\";\nimport { broadcastChannelOptions, getTimeout, randomId } from \"../utils/helpers\";\nimport log from \"../utils/loglevel\";\nimport PopupHandler from \"../utils/PopupHandler\";\nimport { Auth0ClientOptions, ILoginHandler, LoginWindowResponse, PopupResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nabstract class AbstractLoginHandler implements ILoginHandler {\n  public nonce: string = randomId();\n\n  public finalURL: URL;\n\n  // Not using object constructor because of this issue\n  // https://github.com/microsoft/TypeScript/issues/5326\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {}\n\n  get state(): string {\n    return encodeURIComponent(\n      base64url.encode(\n        JSON.stringify({\n          ...(this.customState || {}),\n          instanceId: this.nonce,\n          verifier: this.verifier,\n          typeOfLogin: this.typeOfLogin,\n          redirectToOpener: this.redirectToOpener || false,\n        })\n      )\n    );\n  }\n\n  async handleLoginWindow(params: { locationReplaceOnRedirect?: boolean; popupFeatures?: string }): Promise<LoginWindowResponse> {\n    const verifierWindow = new PopupHandler({ url: this.finalURL, features: params.popupFeatures, timeout: getTimeout(this.typeOfLogin) });\n    if (this.uxMode === UX_MODE.REDIRECT) {\n      verifierWindow.redirect(params.locationReplaceOnRedirect);\n    } else {\n      const { BroadcastChannel } = await import(\"@toruslabs/broadcast-channel\");\n      return new Promise<LoginWindowResponse>((resolve, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let bc: any;\n        const handleData = async (ev: { error: string; data: PopupResponse }) => {\n          try {\n            const { error, data } = ev;\n            const {\n              instanceParams,\n              hashParams: { access_token: accessToken, id_token: idToken, ...rest },\n            } = data || {};\n            if (error) {\n              log.error(ev);\n              reject(new Error(`Error: ${error}. Info: ${JSON.stringify(ev.data || {})}`));\n              return;\n            }\n            if (ev.data && instanceParams.verifier === this.verifier) {\n              log.info(ev.data);\n              if (!this.redirectToOpener && bc) await bc.postMessage({ success: true });\n              resolve({\n                accessToken,\n                idToken: idToken || \"\",\n                ...rest,\n                // State has to be last here otherwise it will be overwritten\n                state: instanceParams,\n              });\n            }\n          } catch (error) {\n            log.error(error);\n            reject(error);\n          }\n        };\n\n        if (!this.redirectToOpener) {\n          bc = new BroadcastChannel<{\n            error: string;\n            data: PopupResponse;\n          }>(`redirect_channel_${this.nonce}`, broadcastChannelOptions);\n          bc.addEventListener(\"message\", async (ev: { error: string; data: PopupResponse }) => {\n            await handleData(ev);\n            bc.close();\n            verifierWindow.close();\n          });\n        } else {\n          const postMessageEventHandler = async (postMessageEvent: MessageEvent) => {\n            if (!postMessageEvent.data) return;\n            const ev = postMessageEvent.data;\n            if (ev.channel !== `redirect_channel_${this.nonce}`) return;\n            window.removeEventListener(\"message\", postMessageEventHandler);\n            handleData(ev);\n            verifierWindow.close();\n          };\n          window.addEventListener(\"message\", postMessageEventHandler);\n        }\n        try {\n          verifierWindow.open();\n        } catch (error) {\n          log.error(error);\n          reject(error);\n          return;\n        }\n        verifierWindow.once(\"close\", () => {\n          if (bc) bc.close();\n          reject(new Error(\"user closed popup\"));\n        });\n      });\n    }\n    return null;\n  }\n\n  abstract getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse>;\n\n  abstract setFinalUrl(): void;\n}\n\nexport default AbstractLoginHandler;\n","import { get } from \"@toruslabs/http-helpers\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class DiscordHandler extends AbstractLoginHandler {\n  private readonly RESPONSE_TYPE: string = \"token\";\n\n  private readonly SCOPE: string = \"identify email\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const finalUrl = new URL(\"https://discord.com/api/oauth2/authorize\");\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams || {}));\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        response_type: this.RESPONSE_TYPE,\n        client_id: this.clientId,\n        redirect_uri: this.redirect_uri,\n        scope: this.SCOPE,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { accessToken } = params;\n    const userInfo = await get<{ id: string; username: string; discriminator: string; avatar?: string; email?: string }>(\n      \"https://discord.com/api/users/@me\",\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      }\n    );\n    const { id, avatar, email = \"\", username: name = \"\", discriminator = \"\" } = userInfo;\n    const profileImage =\n      avatar === null\n        ? `https://cdn.discordapp.com/embed/avatars/${Number(discriminator) % 5}.png`\n        : `https://cdn.discordapp.com/avatars/${id}/${avatar}.png?size=2048`;\n    return {\n      profileImage,\n      name: `${name}#${discriminator}`,\n      email,\n      verifierId: id,\n      verifier: this.verifier,\n      typeOfLogin: this.typeOfLogin,\n    };\n  }\n}\n","import { get } from \"@toruslabs/http-helpers\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class FacebookHandler extends AbstractLoginHandler {\n  private readonly RESPONSE_TYPE: string = \"token\";\n\n  private readonly SCOPE: string = \"public_profile email\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const finalUrl = new URL(\"https://www.facebook.com/v15.0/dialog/oauth\");\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams || {}));\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        response_type: this.RESPONSE_TYPE,\n        client_id: this.clientId,\n        redirect_uri: this.redirect_uri,\n        scope: this.SCOPE,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { accessToken } = params;\n    const userInfo = await get<{ name: string; id: string; picture: { data: { url?: string } }; email?: string }>(\n      \"https://graph.facebook.com/me?fields=name,email,picture.type(large)\",\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      }\n    );\n    const { name = \"\", id, picture, email = \"\" } = userInfo;\n    return {\n      email,\n      name,\n      profileImage: picture.data.url || \"\",\n      verifier: this.verifier,\n      verifierId: id,\n      typeOfLogin: this.typeOfLogin,\n    };\n  }\n}\n","import { get } from \"@toruslabs/http-helpers\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class GoogleHandler extends AbstractLoginHandler {\n  private readonly RESPONSE_TYPE: string = \"token id_token\";\n\n  private readonly SCOPE: string = \"profile email openid\";\n\n  private readonly PROMPT: string = \"consent select_account\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const finalUrl = new URL(\"https://accounts.google.com/o/oauth2/v2/auth\");\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams || {}));\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        response_type: this.RESPONSE_TYPE,\n        client_id: this.clientId,\n        prompt: this.PROMPT,\n        redirect_uri: this.redirect_uri,\n        scope: this.SCOPE,\n        nonce: this.nonce,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { accessToken } = params;\n    const userInfo = await get<{ picture: string; email: string; name: string }>(\"https://www.googleapis.com/userinfo/v2/me\", {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    const { picture: profileImage = \"\", email = \"\", name = \"\" } = userInfo;\n    return {\n      email,\n      name,\n      profileImage,\n      verifier: this.verifier,\n      verifierId: email.toLowerCase(),\n      typeOfLogin: this.typeOfLogin,\n    };\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"jwt-decode\");","import { get } from \"@toruslabs/http-helpers\";\nimport { jwtDecode } from \"jwt-decode\";\nimport deepmerge from \"lodash.merge\";\nimport log from \"loglevel\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport { getVerifierId, loginToConnectionMap, padUrlString, validateAndConstructUrl } from \"../utils/helpers\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport {\n  AUTH0_JWT_LOGIN_TYPE,\n  Auth0ClientOptions,\n  Auth0UserInfo,\n  LoginWindowResponse,\n  TorusGenericObject,\n  TorusVerifierResponse,\n} from \"./interfaces\";\n\nexport default class JwtHandler extends AbstractLoginHandler {\n  private readonly SCOPE: string = \"openid profile email\";\n\n  private readonly RESPONSE_TYPE: string = \"token id_token\";\n\n  private readonly PROMPT: string = \"login\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const { domain } = this.jwtParams;\n    const finalUrl = validateAndConstructUrl(domain);\n    finalUrl.pathname += finalUrl.pathname.endsWith(\"/\") ? \"authorize\" : \"/authorize\";\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams));\n    delete clonedParams.domain;\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        response_type: this.RESPONSE_TYPE,\n        client_id: this.clientId,\n        prompt: this.PROMPT,\n        redirect_uri: this.redirect_uri,\n        scope: this.SCOPE,\n        connection: loginToConnectionMap[this.typeOfLogin as AUTH0_JWT_LOGIN_TYPE],\n        nonce: this.nonce,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { idToken, accessToken } = params;\n    const { domain, verifierIdField, isVerifierIdCaseSensitive, user_info_route = \"userinfo\" } = this.jwtParams;\n    if (accessToken) {\n      try {\n        const domainUrl = new URL(domain);\n        const userInfo = await get<Auth0UserInfo>(`${padUrlString(domainUrl)}${user_info_route}`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        });\n        const { picture, name, email } = userInfo;\n        return {\n          email,\n          name,\n          profileImage: picture,\n          verifierId: getVerifierId(userInfo, this.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n          verifier: this.verifier,\n          typeOfLogin: this.typeOfLogin,\n        };\n      } catch (error) {\n        // ignore\n        log.warn(error, \"Unable to get userinfo from endpoint\");\n      }\n    }\n    if (idToken) {\n      const decodedToken = jwtDecode<Auth0UserInfo>(idToken);\n      const { name, email, picture } = decodedToken;\n      return {\n        profileImage: picture,\n        name,\n        email,\n        verifierId: getVerifierId(decodedToken, this.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n        verifier: this.verifier,\n        typeOfLogin: this.typeOfLogin,\n      };\n    }\n    throw new Error(\"Access/id token not available\");\n  }\n}\n","import { get } from \"@toruslabs/http-helpers\";\nimport { jwtDecode } from \"jwt-decode\";\nimport deepmerge from \"lodash.merge\";\nimport log from \"loglevel\";\n\nimport { LOGIN_TYPE, UX_MODE, UX_MODE_TYPE } from \"../utils/enums\";\nimport { constructURL, getVerifierId, padUrlString } from \"../utils/helpers\";\nimport PopupHandler from \"../utils/PopupHandler\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, Auth0UserInfo, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class MockLoginHandler extends AbstractLoginHandler {\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams));\n    delete clonedParams.domain;\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        client_id: this.clientId,\n        nonce: this.nonce,\n      },\n      clonedParams\n    );\n\n    this.finalURL = new URL(constructURL({ baseURL: this.redirect_uri, query: null, hash: finalJwtParams }));\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { idToken, accessToken } = params;\n    const { domain, verifierIdField, isVerifierIdCaseSensitive, user_info_route = \"userinfo\" } = this.jwtParams;\n    if (accessToken) {\n      try {\n        const domainUrl = new URL(domain);\n        const userInfo = await get<Auth0UserInfo>(`${padUrlString(domainUrl)}${user_info_route}`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        });\n        const { picture, name, email } = userInfo;\n        return {\n          email,\n          name,\n          profileImage: picture,\n          verifierId: getVerifierId(userInfo, this.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n          verifier: this.verifier,\n          typeOfLogin: this.typeOfLogin,\n        };\n      } catch (error) {\n        // ignore\n        log.warn(error, \"Unable to get userinfo from endpoint\");\n      }\n    }\n    if (idToken) {\n      const decodedToken = jwtDecode<Auth0UserInfo>(idToken);\n      const { name, email, picture } = decodedToken;\n      return {\n        profileImage: picture,\n        name,\n        email,\n        verifierId: getVerifierId(decodedToken, this.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n        verifier: this.verifier,\n        typeOfLogin: this.typeOfLogin,\n      };\n    }\n    throw new Error(\"Access/id token not available\");\n  }\n\n  handleLoginWindow(params: { locationReplaceOnRedirect?: boolean; popupFeatures?: string }): Promise<LoginWindowResponse> {\n    const { id_token: idToken, access_token: accessToken } = this.jwtParams;\n    const verifierWindow = new PopupHandler({ url: this.finalURL, features: params.popupFeatures });\n    if (this.uxMode === UX_MODE.REDIRECT) {\n      verifierWindow.redirect(params.locationReplaceOnRedirect);\n    } else {\n      return Promise.resolve({\n        state: {},\n        idToken,\n        accessToken,\n      });\n    }\n    return null;\n  }\n}\n","import { get, post } from \"@toruslabs/http-helpers\";\nimport { jwtDecode } from \"jwt-decode\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport { broadcastChannelOptions, getVerifierId, padUrlString, validateAndConstructUrl } from \"../utils/helpers\";\nimport log from \"../utils/loglevel\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, Auth0UserInfo, LoginWindowResponse, PopupResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class JwtHandler extends AbstractLoginHandler {\n  private readonly SCOPE: string = \"openid profile email\";\n\n  private readonly RESPONSE_TYPE: string = \"token id_token\";\n\n  private readonly PROMPT: string = \"login\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const { domain } = this.jwtParams;\n    const domainUrl = validateAndConstructUrl(domain);\n\n    domainUrl.pathname = \"/passwordless/start\";\n    this.finalURL = domainUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { idToken, accessToken } = params;\n    const { domain, verifierIdField, isVerifierIdCaseSensitive } = this.jwtParams;\n    try {\n      const domainUrl = new URL(domain);\n      const userInfo = await get<Auth0UserInfo>(`${padUrlString(domainUrl)}userinfo`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      const { picture, name, email } = userInfo;\n      return {\n        email,\n        name,\n        profileImage: picture,\n        verifierId: getVerifierId(userInfo, this.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n        verifier: this.verifier,\n        typeOfLogin: this.typeOfLogin,\n      };\n    } catch (error) {\n      log.error(error);\n      const decodedToken = jwtDecode(idToken) as Auth0UserInfo;\n      const { name, email, picture } = decodedToken;\n      return {\n        profileImage: picture,\n        name,\n        email,\n        verifierId: getVerifierId(decodedToken, this.typeOfLogin, verifierIdField, isVerifierIdCaseSensitive),\n        verifier: this.verifier,\n        typeOfLogin: this.typeOfLogin,\n      };\n    }\n  }\n\n  async handleLoginWindow(): Promise<LoginWindowResponse> {\n    const { BroadcastChannel } = await import(\"@toruslabs/broadcast-channel\");\n    return new Promise<LoginWindowResponse>((resolve, reject) => {\n      if (this.redirectToOpener) {\n        reject(new Error(\"Cannot use redirect to opener for passwordless\"));\n        return;\n      }\n      const handleData = (ev: { error: string; data: PopupResponse }) => {\n        try {\n          const { error, data } = ev;\n          const {\n            instanceParams,\n            hashParams: { access_token: accessToken, id_token: idToken, ...rest },\n          } = data || {};\n          if (error) {\n            log.error(ev.error);\n            reject(new Error(error));\n            return;\n          }\n          if (ev.data && instanceParams.verifier === this.verifier) {\n            log.info(ev.data);\n            resolve({ accessToken, idToken: idToken || \"\", ...rest, state: instanceParams });\n          }\n        } catch (error) {\n          log.error(error);\n          reject(error);\n        }\n      };\n      const bc = new BroadcastChannel<{\n        error: string;\n        data: PopupResponse;\n      }>(`redirect_channel_${this.nonce}`, broadcastChannelOptions);\n      bc.addEventListener(\"message\", async (ev) => {\n        handleData(ev);\n        bc.close();\n      });\n      try {\n        const { connection = \"email\", login_hint } = this.jwtParams;\n        const finalJwtParams = deepmerge(\n          {\n            client_id: this.clientId,\n            connection,\n            email: connection === \"email\" ? login_hint : undefined,\n            phone_number: connection === \"sms\" ? login_hint : undefined,\n            send: \"link\",\n            authParams: {\n              scope: this.SCOPE,\n              state: this.state,\n              response_type: this.RESPONSE_TYPE,\n              redirect_uri: this.redirect_uri,\n              nonce: this.nonce,\n              prompt: this.PROMPT,\n            },\n          },\n          {\n            authParams: this.jwtParams,\n          }\n        );\n        // using stringify and parse to remove undefined params\n        // This method is only resolved when the user clicks the email link\n        post(this.finalURL.href, JSON.parse(JSON.stringify(finalJwtParams)))\n          .then((response) => {\n            log.info(\"posted\", response);\n            return undefined;\n          })\n          .catch((error) => {\n            log.error(error);\n            reject(error);\n          });\n      } catch (error) {\n        log.error(error);\n        reject(error);\n      }\n    });\n  }\n}\n","import { get } from \"@toruslabs/http-helpers\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class RedditHandler extends AbstractLoginHandler {\n  private readonly RESPONSE_TYPE: string = \"token\";\n\n  private readonly SCOPE: string = \"identity\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const finalUrl = new URL(`https://www.reddit.com/api/v1/authorize${window.innerWidth < 600 ? \".compact\" : \"\"}`);\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams || {}));\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        response_type: this.RESPONSE_TYPE,\n        client_id: this.clientId,\n        redirect_uri: this.redirect_uri,\n        scope: this.SCOPE,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { accessToken } = params;\n    const userInfo = await get<{ icon_img: string; name: string }>(\"https://oauth.reddit.com/api/v1/me\", {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n    const { icon_img: profileImage = \"\", name = \"\" } = userInfo;\n    return {\n      email: \"\",\n      name,\n      profileImage: profileImage.split(\"?\").length > 0 ? profileImage.split(\"?\")[0] : profileImage,\n      verifier: this.verifier,\n      verifierId: name.toLowerCase(),\n      typeOfLogin: this.typeOfLogin,\n    };\n  }\n}\n","import { get } from \"@toruslabs/http-helpers\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse } from \"./interfaces\";\n\nexport default class TwitchHandler extends AbstractLoginHandler {\n  private readonly RESPONSE_TYPE: string = \"token\";\n\n  private readonly SCOPE: string = \"user:read:email\";\n\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const finalUrl = new URL(\"https://id.twitch.tv/oauth2/authorize\");\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams || {}));\n    const finalJwtParams = deepmerge(\n      {\n        state: this.state,\n        response_type: this.RESPONSE_TYPE,\n        client_id: this.clientId,\n        redirect_uri: this.redirect_uri,\n        scope: this.SCOPE,\n        force_verify: true,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(params: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { accessToken } = params;\n    const userInfo = await get<{ data: [{ profile_image_url: string; display_name: string; email: string; id: string }] }>(\n      \"https://api.twitch.tv/helix/users\",\n      {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n          \"Client-ID\": this.clientId,\n        },\n      }\n    );\n    const [{ profile_image_url: profileImage = \"\", display_name: name = \"\", email = \"\", id: verifierId }] = userInfo.data || [];\n    return {\n      profileImage,\n      name,\n      email,\n      verifierId,\n      verifier: this.verifier,\n      typeOfLogin: this.typeOfLogin,\n    };\n  }\n}\n","import { get } from \"@toruslabs/http-helpers\";\nimport base64url from \"base64url\";\nimport deepmerge from \"lodash.merge\";\n\nimport { LOGIN_TYPE, UX_MODE_TYPE } from \"../utils/enums\";\nimport log from \"../utils/loglevel\";\nimport AbstractLoginHandler from \"./AbstractLoginHandler\";\nimport { Auth0ClientOptions, LoginWindowResponse, TorusGenericObject, TorusVerifierResponse, WebAuthnExtraParams } from \"./interfaces\";\n\nconst WEBAUTHN_LOOKUP_SERVER = \"https://api.webauthn.openlogin.com\";\n\nexport default class WebAuthnHandler extends AbstractLoginHandler {\n  constructor(\n    readonly clientId: string,\n    readonly verifier: string,\n    readonly redirect_uri: string,\n    readonly typeOfLogin: LOGIN_TYPE,\n    readonly uxMode: UX_MODE_TYPE,\n    readonly redirectToOpener?: boolean,\n    readonly jwtParams?: Auth0ClientOptions,\n    readonly customState?: TorusGenericObject,\n    readonly registerOnly?: boolean\n  ) {\n    super(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    this.setFinalUrl();\n  }\n\n  setFinalUrl(): void {\n    const { webauthnURL } = this.customState || {};\n    const finalUrl = webauthnURL ? new URL(webauthnURL) : new URL(\"https://webauthn.openlogin.com\");\n    const clonedParams = JSON.parse(JSON.stringify(this.jwtParams || {}));\n    const finalJwtParams = deepmerge(\n      {\n        register_only: !!this.registerOnly,\n        state: this.state,\n        client_id: this.clientId,\n        redirect_uri: this.redirect_uri,\n      },\n      clonedParams\n    );\n    Object.keys(finalJwtParams).forEach((key) => {\n      if (finalJwtParams[key]) finalUrl.searchParams.append(key, finalJwtParams[key]);\n    });\n    this.finalURL = finalUrl;\n  }\n\n  async getUserInfo(parameters: LoginWindowResponse): Promise<TorusVerifierResponse> {\n    const { idToken, ref, extraParamsPassed, extraParams } = parameters;\n    let verifierId: string;\n    let signature: string;\n    let clientDataJSON: string;\n    let authenticatorData: string;\n    let publicKey: string;\n    let challenge: string;\n    let rpOrigin: string;\n    let credId: string;\n    let transports: AuthenticatorTransport[];\n\n    if (extraParamsPassed === \"true\") {\n      log.debug(\"extraParamsPassed is true, using extraParams passed through hashParams\");\n      try {\n        ({\n          verifier_id: verifierId,\n          signature,\n          clientDataJSON,\n          authenticatorData,\n          publicKey,\n          challenge,\n          rpOrigin,\n          credId,\n          transports,\n        } = JSON.parse(base64url.decode(extraParams)));\n      } catch (error) {\n        log.warn(\"unable to parse extraParams\", error);\n        ({\n          verifier_id: verifierId,\n          signature,\n          clientDataJSON,\n          authenticatorData,\n          publicKey,\n          challenge,\n          rpOrigin,\n          credId,\n          transports,\n        } = await get<WebAuthnExtraParams & { verifier_id: string }>(`${WEBAUTHN_LOOKUP_SERVER}/signature/fetch/${idToken}`));\n      }\n    } else {\n      log.debug(\"extraParamsPassed is false, using extraParams passed through bridge server\");\n      ({\n        verifier_id: verifierId,\n        signature,\n        clientDataJSON,\n        authenticatorData,\n        publicKey,\n        challenge,\n        rpOrigin,\n        credId,\n        transports,\n      } = await get<WebAuthnExtraParams & { verifier_id: string }>(`${WEBAUTHN_LOOKUP_SERVER}/signature/fetch/${idToken}`));\n    }\n\n    if (signature !== idToken) {\n      throw new Error(\"idtoken should be equal to signature\");\n    }\n\n    return {\n      email: \"\",\n      name: \"WebAuthn Login\",\n      profileImage: \"\",\n      verifier: this.verifier,\n      verifierId,\n      typeOfLogin: this.typeOfLogin,\n      ref,\n      registerOnly: this.registerOnly,\n      extraVerifierParams: {\n        signature,\n        clientDataJSON,\n        authenticatorData,\n        publicKey,\n        challenge,\n        rpOrigin,\n        credId,\n        transports,\n      },\n    };\n  }\n}\n","import { LOGIN } from \"../utils/enums\";\nimport DiscordHandler from \"./DiscordHandler\";\nimport FacebookHandler from \"./FacebookHandler\";\nimport GoogleHandler from \"./GoogleHandler\";\nimport { CreateHandlerParams, ILoginHandler } from \"./interfaces\";\nimport JwtHandler from \"./JwtHandler\";\nimport MockLoginHandler from \"./MockLoginHandler\";\nimport PasswordlessHandler from \"./PasswordlessHandler\";\nimport RedditHandler from \"./RedditHandler\";\nimport TwitchHandler from \"./TwitchHandler\";\nimport WebAuthnHandler from \"./WebAuthnHandler\";\n\nconst createHandler = ({\n  clientId,\n  redirect_uri,\n  typeOfLogin,\n  verifier,\n  jwtParams,\n  redirectToOpener,\n  uxMode,\n  customState,\n  registerOnly,\n}: CreateHandlerParams): ILoginHandler => {\n  if (!verifier || !typeOfLogin || !clientId) {\n    throw new Error(\"Invalid params\");\n  }\n  const { domain, login_hint, id_token, access_token } = jwtParams || {};\n  switch (typeOfLogin) {\n    case LOGIN.GOOGLE:\n      return new GoogleHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.FACEBOOK:\n      return new FacebookHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.TWITCH:\n      return new TwitchHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.REDDIT:\n      return new RedditHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.DISCORD:\n      return new DiscordHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.PASSWORDLESS:\n      if (!domain || !login_hint) throw new Error(\"Invalid params\");\n      return new PasswordlessHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.APPLE:\n    case LOGIN.GITHUB:\n    case LOGIN.LINKEDIN:\n    case LOGIN.TWITTER:\n    case LOGIN.WEIBO:\n    case LOGIN.LINE:\n    case LOGIN.EMAIL_PASSWORD:\n    case LOGIN.JWT:\n      if (id_token || access_token) {\n        return new MockLoginHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n      }\n      if (!domain) throw new Error(\"Invalid params\");\n      return new JwtHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState);\n    case LOGIN.WEBAUTHN:\n      return new WebAuthnHandler(clientId, verifier, redirect_uri, typeOfLogin, uxMode, redirectToOpener, jwtParams, customState, registerOnly);\n    default:\n      throw new Error(\"Invalid login type\");\n  }\n};\n\nexport default createHandler;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/fetch-node-details\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/torus.js\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@chaitanyapotti/register-service-worker\");","import { register } from \"@chaitanyapotti/register-service-worker\";\n\nimport log from \"./utils/loglevel\";\n\nexport const registerServiceWorker = (baseUrl: string) =>\n  new Promise((resolve, reject) => {\n    const swUrl = `${baseUrl}sw.js`;\n\n    if (\"serviceWorker\" in window.navigator) {\n      // if swIntegrity is not calculated\n      register(swUrl, {\n        ready() {\n          log.info(\"App is being served from cache by a service worker.\\n For more details, visit https://goo.gl/AFskqB\");\n          resolve(undefined);\n        },\n        registered() {\n          log.info(\"Service worker has been registered.\");\n          resolve(undefined);\n        },\n        cached() {\n          log.info(\"Content has been cached for offline use.\");\n          resolve(undefined);\n        },\n        updatefound() {\n          log.info(\"New content is downloading.\");\n        },\n        updated() {\n          log.info(\"New content is available; please refresh.\");\n        },\n        offline() {\n          log.info(\"No internet connection found. App is running in offline mode.\");\n          reject(new Error(\"App is offline\"));\n        },\n        error(error) {\n          log.error(\"Error during service worker registration:\", error);\n          reject(error);\n        },\n      });\n    } else {\n      reject(new Error(\"Service workers are not supported\"));\n    }\n  });\n","import type { Transaction, TransactionContext } from \"@sentry/types\";\n\nexport interface Sentry {\n  startTransaction(_: TransactionContext): Transaction;\n}\nexport default class SentryHandler {\n  sentry: Sentry | null = null;\n\n  constructor(sentry?: Sentry) {\n    this.sentry = sentry;\n  }\n\n  startTransaction(context: TransactionContext): Transaction | void {\n    if (this.sentry) {\n      return this.sentry.startTransaction(context);\n    }\n  }\n\n  finishTransaction(tx: void | Transaction): void {\n    if (tx) {\n      tx.finish();\n    }\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/eccrypto\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/metadata-helpers\");","import { getPublic, sign } from \"@toruslabs/eccrypto\";\nimport { get, post } from \"@toruslabs/http-helpers\";\nimport { decryptData, encryptData, keccak256 } from \"@toruslabs/metadata-helpers\";\n\nimport { LoginDetails } from \"../handlers/interfaces\";\nimport { REDIRECT_PARAMS_STORAGE_METHOD, REDIRECT_PARAMS_STORAGE_METHOD_TYPE } from \"./enums\";\nimport { are3PCSupported, storageAvailable } from \"./helpers\";\nimport log from \"./loglevel\";\n\nclass StorageHelper {\n  private currentStorageMethod: REDIRECT_PARAMS_STORAGE_METHOD_TYPE = REDIRECT_PARAMS_STORAGE_METHOD.LOCAL_STORAGE;\n\n  private isInitialized = false;\n\n  private storageServerUrl = \"https://broadcast-server.tor.us\";\n\n  constructor(serverUrl: string) {\n    this.storageServerUrl = serverUrl;\n  }\n\n  init() {\n    const support = are3PCSupported();\n    const localStorageAvailable = storageAvailable(REDIRECT_PARAMS_STORAGE_METHOD.LOCAL_STORAGE);\n    if (support && localStorageAvailable) {\n      // use local storage as default for storing stuff\n      this.currentStorageMethod = REDIRECT_PARAMS_STORAGE_METHOD.LOCAL_STORAGE;\n    } else {\n      // use server store as default for storing stuff\n      this.currentStorageMethod = REDIRECT_PARAMS_STORAGE_METHOD.SERVER;\n    }\n    this.isInitialized = true;\n  }\n\n  async storeLoginDetails(params: LoginDetails, scope: string): Promise<void> {\n    if (!this.isInitialized) throw new Error(\"StorageHelper is not initialized\");\n    if (this.currentStorageMethod === REDIRECT_PARAMS_STORAGE_METHOD.SERVER) {\n      const privKey = keccak256(Buffer.from(scope, \"utf8\"));\n      const privKeyHex = privKey.toString(\"hex\");\n      const publicKeyHex = getPublic(privKey).toString(\"hex\");\n      const encData = await encryptData(privKeyHex, params);\n      const signature = (await sign(privKey, keccak256(Buffer.from(encData, \"utf8\")))).toString(\"hex\");\n      await post(`${this.storageServerUrl}/store/set`, { key: publicKeyHex, data: encData, signature });\n    } else {\n      window.localStorage.setItem(`torus_login_${scope}`, JSON.stringify(params));\n    }\n  }\n\n  async retrieveLoginDetails(scope: string): Promise<LoginDetails> {\n    if (!this.isInitialized) throw new Error(\"StorageHelper is not initialized\");\n    if (this.currentStorageMethod === REDIRECT_PARAMS_STORAGE_METHOD.SERVER) {\n      const privKey = keccak256(Buffer.from(scope, \"utf8\"));\n      const privKeyHex = privKey.toString(\"hex\");\n      const publicKeyHex = getPublic(privKey).toString(\"hex\");\n      try {\n        const encData: { message: string; success: boolean } = await get(`${this.storageServerUrl}/store/get?key=${publicKeyHex}`);\n        if (encData.message) {\n          const loginDetails = await decryptData<LoginDetails>(privKeyHex, encData.message);\n          return loginDetails;\n        }\n      } catch (error) {\n        if ((error as Response).status === 404) {\n          log.warn(error, \"Session likely expired\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    const loginDetails = window.localStorage.getItem(`torus_login_${scope}`);\n    return JSON.parse(loginDetails || \"{}\") as LoginDetails;\n  }\n\n  clearLoginDetailsStorage(scope: string): void {\n    if (!this.isInitialized) throw new Error(\"StorageHelper is not initialized\");\n    if (this.currentStorageMethod === REDIRECT_PARAMS_STORAGE_METHOD.LOCAL_STORAGE) {\n      window.localStorage.removeItem(`torus_login_${scope}`);\n    }\n    // No need to clear server details cause they auto expire and scope is never re-used for different login attempts\n  }\n\n  clearOrphanedLoginDetails(): void {\n    if (!this.isInitialized) throw new Error(\"StorageHelper is not initialized\");\n    if (this.currentStorageMethod === REDIRECT_PARAMS_STORAGE_METHOD.LOCAL_STORAGE) {\n      const allStorageKeys = Object.keys(window.localStorage);\n      allStorageKeys.forEach((key) => {\n        if (key.startsWith(\"torus_login_\")) {\n          window.localStorage.removeItem(key);\n        }\n      });\n    }\n    // No need to clear server details cause they auto expire and scope is never re-used for different login attempts\n  }\n}\n\nexport default StorageHelper;\n","import { NodeDetailManager } from \"@toruslabs/fetch-node-details\";\nimport Torus, { keccak256, TorusKey } from \"@toruslabs/torus.js\";\n\nimport createHandler from \"./handlers/HandlerFactory\";\nimport {\n  AggregateLoginParams,\n  AggregateVerifierParams,\n  CustomAuthArgs,\n  ExtraParams,\n  HybridAggregateLoginParams,\n  ILoginHandler,\n  InitParams,\n  LoginWindowResponse,\n  RedirectResult,\n  RedirectResultParams,\n  SingleLoginParams,\n  SubVerifierDetails,\n  TorusAggregateLoginResponse,\n  TorusHybridAggregateLoginResponse,\n  TorusLoginResponse,\n  TorusSubVerifierInfo,\n  TorusVerifierResponse,\n} from \"./handlers/interfaces\";\nimport { registerServiceWorker } from \"./registerServiceWorker\";\nimport SentryHandler from \"./sentry\";\nimport { AGGREGATE_VERIFIER, LOGIN, SENTRY_TXNS, TORUS_METHOD, UX_MODE, UX_MODE_TYPE } from \"./utils/enums\";\nimport { handleRedirectParameters, isFirefox, padUrlString } from \"./utils/helpers\";\nimport log from \"./utils/loglevel\";\nimport StorageHelper from \"./utils/StorageHelper\";\n\nclass CustomAuth {\n  isInitialized: boolean;\n\n  config: {\n    baseUrl: string;\n    redirectToOpener: boolean;\n    redirect_uri: string;\n    uxMode: UX_MODE_TYPE;\n    locationReplaceOnRedirect: boolean;\n    popupFeatures: string;\n  };\n\n  torus: Torus;\n\n  nodeDetailManager: NodeDetailManager;\n\n  storageHelper: StorageHelper;\n\n  sentryHandler: SentryHandler;\n\n  constructor({\n    baseUrl,\n    network,\n    enableLogging = false,\n    redirectToOpener = false,\n    redirectPathName = \"redirect\",\n    apiKey = \"torus-default\",\n    uxMode = UX_MODE.POPUP,\n    locationReplaceOnRedirect = false,\n    popupFeatures,\n    storageServerUrl = \"https://broadcast-server.tor.us\",\n    sentry,\n    enableOneKey = false,\n    web3AuthClientId,\n    metadataUrl = \"https://metadata.tor.us\",\n  }: CustomAuthArgs) {\n    if (!web3AuthClientId) throw new Error(\"Please provide a valid web3AuthClientId in constructor\");\n    if (!network) throw new Error(\"Please provide a valid network in constructor\");\n    this.isInitialized = false;\n    const baseUri = new URL(baseUrl);\n    this.config = {\n      baseUrl: padUrlString(baseUri),\n      get redirect_uri() {\n        return `${this.baseUrl}${redirectPathName}`;\n      },\n      redirectToOpener,\n      uxMode,\n      locationReplaceOnRedirect,\n      popupFeatures,\n    };\n    const torus = new Torus({\n      network,\n      clientId: web3AuthClientId,\n      enableOneKey,\n      legacyMetadataHost: metadataUrl,\n    });\n    Torus.setAPIKey(apiKey);\n    this.torus = torus;\n    this.nodeDetailManager = new NodeDetailManager({ network });\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n    this.storageHelper = new StorageHelper(storageServerUrl);\n    this.sentryHandler = new SentryHandler(sentry);\n  }\n\n  async init({ skipSw = false, skipInit = false, skipPrefetch = false }: InitParams = {}): Promise<void> {\n    this.storageHelper.init();\n    if (skipInit) {\n      this.isInitialized = true;\n      return;\n    }\n    if (!skipSw) {\n      const fetchSwResponse = await fetch(`${this.config.baseUrl}sw.js`, { cache: \"reload\" });\n      if (fetchSwResponse.ok) {\n        try {\n          await registerServiceWorker(this.config.baseUrl);\n          this.isInitialized = true;\n          return;\n        } catch (error) {\n          log.warn(error);\n        }\n      } else {\n        throw new Error(\"Service worker is not being served. Please serve it\");\n      }\n    }\n    if (!skipPrefetch) {\n      // Skip the redirect check for firefox\n      if (isFirefox()) {\n        this.isInitialized = true;\n        return;\n      }\n      await this.handlePrefetchRedirectUri();\n      return;\n    }\n    this.isInitialized = true;\n  }\n\n  async triggerLogin(args: SingleLoginParams): Promise<TorusLoginResponse> {\n    const { verifier, verifierID, idToken, accessToken, typeOfLogin, clientId, jwtParams, customState, registerOnly } = args;\n    log.info(\"Verifier: \", verifier);\n    if (!this.isInitialized) {\n      throw new Error(\"Not initialized yet\");\n    }\n    if (registerOnly && typeOfLogin !== LOGIN.WEBAUTHN) throw new Error(\"registerOnly flag can only be passed for webauthn\");\n    const loginHandler: ILoginHandler = createHandler({\n      typeOfLogin,\n      clientId,\n      verifier,\n      redirect_uri: this.config.redirect_uri,\n      redirectToOpener: this.config.redirectToOpener,\n      jwtParams,\n      uxMode: this.config.uxMode,\n      customState,\n      registerOnly,\n    });\n    this.storageHelper.clearOrphanedLoginDetails();\n    if (this.config.uxMode === UX_MODE.REDIRECT) {\n      await this.storageHelper.storeLoginDetails({ method: TORUS_METHOD.TRIGGER_LOGIN, args }, loginHandler.nonce);\n    }\n    if (this.config.uxMode === UX_MODE.REDIRECT) return null;\n    if (registerOnly) {\n      const nodeTx = this.sentryHandler.startTransaction({\n        name: SENTRY_TXNS.FETCH_NODE_DETAILS,\n      });\n      const nodeDetails = await this.nodeDetailManager.getNodeDetails({ verifier, verifierId: verifierID });\n\n      this.sentryHandler.finishTransaction(nodeTx);\n      const lookupTx = this.sentryHandler.startTransaction({\n        name: SENTRY_TXNS.PUB_ADDRESS_LOOKUP,\n      });\n      const torusPubKey = await this.torus.getPublicAddress(nodeDetails.torusNodeEndpoints, nodeDetails.torusNodePub, {\n        verifier,\n        verifierId: verifierID,\n      });\n      this.sentryHandler.finishTransaction(lookupTx);\n      return {\n        ...torusPubKey,\n        finalKeyData: { ...torusPubKey.finalKeyData, privKey: undefined },\n        oAuthKeyData: { ...torusPubKey.finalKeyData, privKey: undefined },\n        metadata: { ...torusPubKey.metadata, nonce: undefined },\n        sessionData: undefined,\n      };\n    }\n\n    const torusKey = await this.getTorusKey(verifier, verifierID, { verifier_id: verifierID }, idToken || accessToken);\n    return {\n      ...torusKey,\n    };\n  }\n\n  async triggerAggregateLogin(args: AggregateLoginParams): Promise<TorusAggregateLoginResponse> {\n    // This method shall break if any of the promises fail. This behaviour is intended\n    const { aggregateVerifierType, verifierIdentifier, subVerifierDetailsArray } = args;\n    if (!this.isInitialized) {\n      throw new Error(\"Not initialized yet\");\n    }\n    if (!aggregateVerifierType || !verifierIdentifier || !Array.isArray(subVerifierDetailsArray)) {\n      throw new Error(\"Invalid params\");\n    }\n    if (aggregateVerifierType === AGGREGATE_VERIFIER.SINGLE_VERIFIER_ID && subVerifierDetailsArray.length !== 1) {\n      throw new Error(\"Single id verifier can only have one sub verifier\");\n    }\n    const userInfoPromises: Promise<TorusVerifierResponse>[] = [];\n    const loginParamsArray: LoginWindowResponse[] = [];\n    for (const subVerifierDetail of subVerifierDetailsArray) {\n      const { clientId, typeOfLogin, verifier, jwtParams, hash, queryParameters, customState } = subVerifierDetail;\n      const loginHandler: ILoginHandler = createHandler({\n        typeOfLogin,\n        clientId,\n        verifier,\n        redirect_uri: this.config.redirect_uri,\n        redirectToOpener: this.config.redirectToOpener,\n        jwtParams,\n        uxMode: this.config.uxMode,\n        customState,\n      });\n      // We let the user login to each verifier in a loop. Don't wait for key derivation here.!\n      let loginParams: LoginWindowResponse;\n      if (hash && queryParameters) {\n        const { error, hashParameters, instanceParameters } = handleRedirectParameters(hash, queryParameters);\n        if (error) throw new Error(error);\n        const { access_token: accessToken, id_token: idToken, ...rest } = hashParameters;\n        // State has to be last here otherwise it will be overwritten\n        loginParams = { accessToken, idToken, ...rest, state: instanceParameters };\n      } else {\n        this.storageHelper.clearOrphanedLoginDetails();\n        if (this.config.uxMode === UX_MODE.REDIRECT) {\n          await this.storageHelper.storeLoginDetails({ method: TORUS_METHOD.TRIGGER_AGGREGATE_LOGIN, args }, loginHandler.nonce);\n        }\n        loginParams = await loginHandler.handleLoginWindow({\n          locationReplaceOnRedirect: this.config.locationReplaceOnRedirect,\n          popupFeatures: this.config.popupFeatures,\n        });\n        if (this.config.uxMode === UX_MODE.REDIRECT) return null;\n      }\n      // Fail the method even if one promise fails\n\n      userInfoPromises.push(loginHandler.getUserInfo(loginParams));\n      loginParamsArray.push(loginParams);\n    }\n    const _userInfoArray = await Promise.all(userInfoPromises);\n    const userInfoArray = _userInfoArray.map((userInfo) => ({ ...userInfo, aggregateVerifier: verifierIdentifier }));\n    const aggregateVerifierParams: AggregateVerifierParams = { verify_params: [], sub_verifier_ids: [], verifier_id: \"\" };\n    const aggregateIdTokenSeeds = [];\n    let aggregateVerifierId = \"\";\n    let extraVerifierParams = {};\n    for (let index = 0; index < subVerifierDetailsArray.length; index += 1) {\n      const loginParams = loginParamsArray[index];\n      const { idToken, accessToken } = loginParams;\n      const userInfo = userInfoArray[index];\n      aggregateVerifierParams.verify_params.push({ verifier_id: userInfo.verifierId, idtoken: idToken || accessToken });\n      aggregateVerifierParams.sub_verifier_ids.push(userInfo.verifier);\n      aggregateIdTokenSeeds.push(idToken || accessToken);\n      aggregateVerifierId = userInfo.verifierId; // using last because idk\n      extraVerifierParams = userInfo.extraVerifierParams;\n    }\n    aggregateIdTokenSeeds.sort();\n    const aggregateIdToken = keccak256(Buffer.from(aggregateIdTokenSeeds.join(String.fromCharCode(29)), \"utf8\")).slice(2);\n    aggregateVerifierParams.verifier_id = aggregateVerifierId;\n    const torusKey = await this.getTorusKey(verifierIdentifier, aggregateVerifierId, aggregateVerifierParams, aggregateIdToken, extraVerifierParams);\n    return {\n      ...torusKey,\n      userInfo: userInfoArray.map((x, index) => ({ ...x, ...loginParamsArray[index] })),\n    };\n  }\n\n  async triggerHybridAggregateLogin(args: HybridAggregateLoginParams): Promise<TorusHybridAggregateLoginResponse> {\n    const { singleLogin, aggregateLoginParams } = args;\n    // This method shall break if any of the promises fail. This behaviour is intended\n    if (!this.isInitialized) {\n      throw new Error(\"Not initialized yet\");\n    }\n    if (\n      !aggregateLoginParams.aggregateVerifierType ||\n      !aggregateLoginParams.verifierIdentifier ||\n      !Array.isArray(aggregateLoginParams.subVerifierDetailsArray)\n    ) {\n      throw new Error(\"Invalid params\");\n    }\n    if (\n      aggregateLoginParams.aggregateVerifierType === AGGREGATE_VERIFIER.SINGLE_VERIFIER_ID &&\n      aggregateLoginParams.subVerifierDetailsArray.length !== 1\n    ) {\n      throw new Error(\"Single id verifier can only have one sub verifier\");\n    }\n    const { typeOfLogin, clientId, verifier, jwtParams, hash, queryParameters, customState } = singleLogin;\n    const loginHandler: ILoginHandler = createHandler({\n      typeOfLogin,\n      clientId,\n      verifier,\n      redirect_uri: this.config.redirect_uri,\n      redirectToOpener: this.config.redirectToOpener,\n      jwtParams,\n      uxMode: this.config.uxMode,\n      customState,\n    });\n    let loginParams: LoginWindowResponse;\n    if (hash && queryParameters) {\n      const { error, hashParameters, instanceParameters } = handleRedirectParameters(hash, queryParameters);\n      if (error) throw new Error(error);\n      const { access_token: accessToken, id_token: idToken, ...rest } = hashParameters;\n      // State has to be last here otherwise it will be overwritten\n      loginParams = { accessToken, idToken, ...rest, state: instanceParameters };\n    } else {\n      this.storageHelper.clearOrphanedLoginDetails();\n      if (this.config.uxMode === UX_MODE.REDIRECT) {\n        await this.storageHelper.storeLoginDetails({ method: TORUS_METHOD.TRIGGER_AGGREGATE_HYBRID_LOGIN, args }, loginHandler.nonce);\n      }\n      loginParams = await loginHandler.handleLoginWindow({\n        locationReplaceOnRedirect: this.config.locationReplaceOnRedirect,\n        popupFeatures: this.config.popupFeatures,\n      });\n      if (this.config.uxMode === UX_MODE.REDIRECT) return null;\n    }\n\n    const userInfo = await loginHandler.getUserInfo(loginParams);\n    const torusKey1Promise = this.getTorusKey(\n      verifier,\n      userInfo.verifierId,\n      { verifier_id: userInfo.verifierId },\n      loginParams.idToken || loginParams.accessToken,\n      userInfo.extraVerifierParams\n    );\n\n    const { verifierIdentifier, subVerifierDetailsArray } = aggregateLoginParams;\n    const aggregateVerifierParams: AggregateVerifierParams = { verify_params: [], sub_verifier_ids: [], verifier_id: \"\" };\n    const aggregateIdTokenSeeds = [];\n    let aggregateVerifierId = \"\";\n    for (let index = 0; index < subVerifierDetailsArray.length; index += 1) {\n      const sub = subVerifierDetailsArray[index];\n      const { idToken, accessToken } = loginParams;\n      aggregateVerifierParams.verify_params.push({ verifier_id: userInfo.verifierId, idtoken: idToken || accessToken });\n      aggregateVerifierParams.sub_verifier_ids.push(sub.verifier);\n      aggregateIdTokenSeeds.push(idToken || accessToken);\n      aggregateVerifierId = userInfo.verifierId; // using last because idk\n    }\n    aggregateIdTokenSeeds.sort();\n    const aggregateIdToken = keccak256(Buffer.from(aggregateIdTokenSeeds.join(String.fromCharCode(29)), \"utf8\")).slice(2);\n    aggregateVerifierParams.verifier_id = aggregateVerifierId;\n    const torusKey2Promise = this.getTorusKey(\n      verifierIdentifier,\n      aggregateVerifierId,\n      aggregateVerifierParams,\n      aggregateIdToken,\n      userInfo.extraVerifierParams\n    );\n    const [torusKey1, torusKey2] = await Promise.all([torusKey1Promise, torusKey2Promise]);\n    return {\n      singleLogin: {\n        ...torusKey1,\n      },\n      aggregateLogins: [torusKey2],\n    };\n  }\n\n  async getTorusKey(\n    verifier: string,\n    verifierId: string,\n    verifierParams: { verifier_id: string },\n    idToken: string,\n    additionalParams?: ExtraParams\n  ): Promise<TorusKey> {\n    const nodeTx = this.sentryHandler.startTransaction({\n      name: SENTRY_TXNS.FETCH_NODE_DETAILS,\n    });\n    const nodeDetails = await this.nodeDetailManager.getNodeDetails({ verifier, verifierId });\n    this.sentryHandler.finishTransaction(nodeTx);\n\n    if (this.torus.isLegacyNetwork) {\n      // Call getPublicAddress to do keyassign for legacy networks which are not migrated\n      const pubLookupTx = this.sentryHandler.startTransaction({\n        name: SENTRY_TXNS.PUB_ADDRESS_LOOKUP,\n      });\n      const address = await this.torus.getPublicAddress(nodeDetails.torusNodeEndpoints, nodeDetails.torusNodePub, { verifier, verifierId });\n      this.sentryHandler.finishTransaction(pubLookupTx);\n      log.debug(\"torus-direct/getTorusKey\", { getPublicAddress: address });\n    }\n\n    log.debug(\"torus-direct/getTorusKey\", { torusNodeEndpoints: nodeDetails.torusNodeEndpoints });\n\n    const sharesTx = this.sentryHandler.startTransaction({\n      name: SENTRY_TXNS.FETCH_SHARES,\n    });\n    const sharesResponse = await this.torus.retrieveShares(\n      nodeDetails.torusNodeEndpoints,\n      nodeDetails.torusIndexes,\n      verifier,\n      verifierParams,\n      idToken,\n      {\n        ...additionalParams,\n      }\n    );\n    this.sentryHandler.finishTransaction(sharesTx);\n    log.debug(\"torus-direct/getTorusKey\", { retrieveShares: sharesResponse });\n    return sharesResponse;\n  }\n\n  async getAggregateTorusKey(\n    verifier: string,\n    verifierId: string, // unique identifier for user e.g. sub on jwt\n    subVerifierInfoArray: TorusSubVerifierInfo[]\n  ): Promise<TorusKey> {\n    const aggregateVerifierParams: AggregateVerifierParams = { verify_params: [], sub_verifier_ids: [], verifier_id: \"\" };\n    const aggregateIdTokenSeeds = [];\n    let extraVerifierParams = {};\n    for (let index = 0; index < subVerifierInfoArray.length; index += 1) {\n      const userInfo = subVerifierInfoArray[index];\n      aggregateVerifierParams.verify_params.push({ verifier_id: verifierId, idtoken: userInfo.idToken });\n      aggregateVerifierParams.sub_verifier_ids.push(userInfo.verifier);\n      aggregateIdTokenSeeds.push(userInfo.idToken);\n      extraVerifierParams = userInfo.extraVerifierParams;\n    }\n    aggregateIdTokenSeeds.sort();\n    const aggregateIdToken = keccak256(Buffer.from(aggregateIdTokenSeeds.join(String.fromCharCode(29)), \"utf8\")).slice(2);\n    aggregateVerifierParams.verifier_id = verifierId;\n    return this.getTorusKey(verifier, verifierId, aggregateVerifierParams, aggregateIdToken, extraVerifierParams);\n  }\n\n  async getRedirectResult({ replaceUrl = true, clearLoginDetails = true }: RedirectResultParams = {}): Promise<RedirectResult> {\n    await this.init({ skipInit: true });\n    const url = new URL(window.location.href);\n    const hash = url.hash.substring(1);\n    const queryParams: Record<string, string> = {};\n    url.searchParams.forEach((value: string, key: string) => {\n      queryParams[key] = value;\n    });\n\n    if (replaceUrl) {\n      const cleanUrl = window.location.origin + window.location.pathname;\n      window.history.replaceState({ ...window.history.state, as: cleanUrl, url: cleanUrl }, \"\", cleanUrl);\n    }\n\n    if (!hash && Object.keys(queryParams).length === 0) {\n      throw new Error(\"Unable to fetch result from OAuth login\");\n    }\n\n    const { error, instanceParameters, hashParameters } = handleRedirectParameters(hash, queryParams);\n\n    const { instanceId } = instanceParameters;\n\n    log.info(instanceId, \"instanceId\");\n\n    const { args, method, ...rest } = await this.storageHelper.retrieveLoginDetails(instanceId);\n    log.info(args, method);\n\n    if (clearLoginDetails) {\n      this.storageHelper.clearLoginDetailsStorage(instanceId);\n    }\n\n    if (error) {\n      return { error, state: instanceParameters || {}, method, result: {}, hashParameters, args };\n    }\n\n    let result: unknown;\n\n    try {\n      if (method === TORUS_METHOD.TRIGGER_LOGIN) {\n        const methodArgs = args as SubVerifierDetails & { registerOnly?: boolean };\n        methodArgs.hash = hash;\n        methodArgs.queryParameters = queryParams;\n        result = await this.triggerLogin(methodArgs);\n      } else if (method === TORUS_METHOD.TRIGGER_AGGREGATE_LOGIN) {\n        const methodArgs = args as AggregateLoginParams;\n        methodArgs.subVerifierDetailsArray.forEach((x) => {\n          x.hash = hash;\n          x.queryParameters = queryParams;\n        });\n        result = await this.triggerAggregateLogin(methodArgs);\n      } else if (method === TORUS_METHOD.TRIGGER_AGGREGATE_HYBRID_LOGIN) {\n        const methodArgs = args as HybridAggregateLoginParams;\n        methodArgs.singleLogin.hash = hash;\n        methodArgs.singleLogin.queryParameters = queryParams;\n        result = await this.triggerHybridAggregateLogin(methodArgs);\n      }\n    } catch (err: unknown) {\n      log.error(err);\n      return {\n        error: `Could not get result from torus nodes \\n ${(err as Error)?.message || \"\"}`,\n        state: instanceParameters || {},\n        method,\n        result: {},\n        hashParameters,\n        args,\n        ...rest,\n      };\n    }\n\n    if (!result)\n      return {\n        error: \"Unsupported method type\",\n        state: instanceParameters || {},\n        method,\n        result: {},\n        hashParameters,\n        args,\n        ...rest,\n      };\n\n    return { method, result, state: instanceParameters || {}, hashParameters, args, ...rest };\n  }\n\n  private async handlePrefetchRedirectUri(): Promise<void> {\n    if (!document) return Promise.resolve();\n    return new Promise((resolve, reject) => {\n      const redirectHtml = document.createElement(\"link\");\n      redirectHtml.href = this.config.redirect_uri;\n      if (window.location.origin !== new URL(this.config.redirect_uri).origin) redirectHtml.crossOrigin = \"anonymous\";\n      redirectHtml.type = \"text/html\";\n      redirectHtml.rel = \"prefetch\";\n      const resolveFn = () => {\n        this.isInitialized = true;\n        resolve();\n      };\n      try {\n        if (redirectHtml.relList && redirectHtml.relList.supports) {\n          if (redirectHtml.relList.supports(\"prefetch\")) {\n            redirectHtml.onload = resolveFn;\n            redirectHtml.onerror = () => {\n              reject(new Error(`Please serve redirect.html present in serviceworker folder of this package on ${this.config.redirect_uri}`));\n            };\n            document.head.appendChild(redirectHtml);\n          } else {\n            // Link prefetch is not supported. pass through\n            resolveFn();\n          }\n        } else {\n          // Link prefetch is not detectable. pass through\n          resolveFn();\n        }\n      } catch (err) {\n        resolveFn();\n      }\n    });\n  }\n}\n\nexport default CustomAuth;\n","export { default as createHandler } from \"./handlers/HandlerFactory\";\nexport * from \"./handlers/interfaces\";\nexport { default } from \"./login\";\nexport * from \"./utils/enums\";\nexport * from \"./utils/helpers\";\n"],"names":["LOGIN","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","GITHUB","LINKEDIN","TWITTER","WEIBO","LINE","EMAIL_PASSWORD","PASSWORDLESS","JWT","WEBAUTHN","AGGREGATE_VERIFIER","SINGLE_VERIFIER_ID","UX_MODE","POPUP","REDIRECT","REDIRECT_PARAMS_STORAGE_METHOD","LOCAL_STORAGE","SESSION_STORAGE","SERVER","TORUS_METHOD","TRIGGER_LOGIN","TRIGGER_AGGREGATE_LOGIN","TRIGGER_AGGREGATE_HYBRID_LOGIN","SENTRY_TXNS","FETCH_NODE_DETAILS","PUB_ADDRESS_LOOKUP","FETCH_SHARES","loglevel","getLogger","base64url","Bowser","log","eventToPromise","emitter","Promise","resolve","reject","handler","ev","error","data","removeEventListener","Error","addEventListener","loginToConnectionMap","padUrlString","url","href","endsWith","randomId","Math","random","toString","slice","broadcastChannelOptions","webWorkerSupport","caseSensitiveField","field","isCaseSensitive","toLowerCase","getVerifierId","userInfo","typeOfLogin","verifierIdField","isVerifierIdCaseSensitive","arguments","length","undefined","name","sub","handleRedirectParameters","hash","queryParameters","hashParameters","split","reduce","result","item","part0","part1","info","instanceParameters","Object","keys","state","JSON","parse","decode","decodeURIComponent","error_description","storageAvailable","type","storage","window","x","setItem","removeItem","e","code","getPopupFeatures","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","w","h","width","innerWidth","document","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","abs","top","features","isFirefox","_window","navigator","userAgent","indexOf","constructURL","params","baseURL","query","URL","forEach","key","searchParams","append","are3PCSupported","_navigator","browserInfo","stringify","thirdPartyCookieSupport","brave","engine","ENGINE_MAP","WebKit","Gecko","validateAndConstructUrl","domain","message","isMobileOrTablet","browser","getParser","platform","getPlatform","PLATFORMS_MAP","tablet","mobile","getTimeout","EventEmitter","PopupHandler","constructor","_ref","target","timeout","_defineProperty","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","setTimeout","emit","open","_this$window","focus","close","redirect","locationReplaceOnRedirect","location","replace","AbstractLoginHandler","clientId","verifier","redirect_uri","uxMode","redirectToOpener","jwtParams","customState","encodeURIComponent","encode","_objectSpread","instanceId","nonce","handleLoginWindow","verifierWindow","finalURL","popupFeatures","BroadcastChannel","bc","handleData","instanceParams","hashParams","access_token","accessToken","id_token","idToken","rest","_objectWithoutProperties","_excluded","postMessage","success","postMessageEventHandler","postMessageEvent","channel","once","get","deepmerge","DiscordHandler","setFinalUrl","finalUrl","clonedParams","finalJwtParams","response_type","RESPONSE_TYPE","client_id","scope","SCOPE","getUserInfo","headers","Authorization","id","avatar","email","username","discriminator","profileImage","verifierId","FacebookHandler","picture","GoogleHandler","prompt","PROMPT","jwtDecode","JwtHandler","pathname","connection","user_info_route","domainUrl","warn","decodedToken","MockLoginHandler","post","login_hint","phone_number","send","authParams","then","response","catch","RedditHandler","icon_img","TwitchHandler","force_verify","profile_image_url","display_name","WEBAUTHN_LOOKUP_SERVER","WebAuthnHandler","registerOnly","webauthnURL","register_only","parameters","ref","extraParamsPassed","extraParams","signature","clientDataJSON","authenticatorData","publicKey","challenge","rpOrigin","credId","transports","debug","verifier_id","extraVerifierParams","PasswordlessHandler","createHandler","register","registerServiceWorker","baseUrl","swUrl","ready","registered","cached","updatefound","updated","offline","SentryHandler","sentry","startTransaction","context","finishTransaction","tx","finish","getPublic","sign","decryptData","encryptData","keccak256","StorageHelper","serverUrl","storageServerUrl","init","support","localStorageAvailable","currentStorageMethod","isInitialized","storeLoginDetails","privKey","Buffer","from","privKeyHex","publicKeyHex","encData","localStorage","retrieveLoginDetails","loginDetails","status","getItem","clearLoginDetailsStorage","clearOrphanedLoginDetails","allStorageKeys","startsWith","NodeDetailManager","Torus","CustomAuth","network","enableLogging","redirectPathName","apiKey","enableOneKey","web3AuthClientId","metadataUrl","baseUri","config","torus","legacyMetadataHost","setAPIKey","nodeDetailManager","enableAll","disableAll","storageHelper","sentryHandler","skipSw","skipInit","skipPrefetch","fetchSwResponse","fetch","cache","ok","handlePrefetchRedirectUri","triggerLogin","args","verifierID","loginHandler","method","nodeTx","nodeDetails","getNodeDetails","lookupTx","torusPubKey","getPublicAddress","torusNodeEndpoints","torusNodePub","finalKeyData","oAuthKeyData","metadata","sessionData","torusKey","getTorusKey","triggerAggregateLogin","aggregateVerifierType","verifierIdentifier","subVerifierDetailsArray","Array","isArray","userInfoPromises","loginParamsArray","subVerifierDetail","loginParams","push","_userInfoArray","all","userInfoArray","map","aggregateVerifier","aggregateVerifierParams","verify_params","sub_verifier_ids","aggregateIdTokenSeeds","aggregateVerifierId","index","idtoken","sort","aggregateIdToken","join","String","fromCharCode","triggerHybridAggregateLogin","singleLogin","aggregateLoginParams","_excluded2","torusKey1Promise","torusKey2Promise","torusKey1","torusKey2","aggregateLogins","verifierParams","additionalParams","isLegacyNetwork","pubLookupTx","address","sharesTx","sharesResponse","retrieveShares","torusIndexes","getAggregateTorusKey","subVerifierInfoArray","getRedirectResult","replaceUrl","clearLoginDetails","substring","queryParams","value","cleanUrl","origin","history","replaceState","as","_await$this$storageHe","_excluded3","methodArgs","err","redirectHtml","createElement","crossOrigin","rel","resolveFn","relList","supports","onload","onerror","head","appendChild","default"],"sourceRoot":""}